// Source code is decompiled from a .class file using FernFlower decompiler.
package dbutil;

import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Dbconn {
   private static final String DRIVER = "com.mysql.cj.jdbc.Driver";
   private static final String URL = "jdbc:mysql://localhost:3306/students?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC";
   private static final String USER = "root";
   private static final String PASSWORD = "root";
   private Connection conn = null;
   private Statement stmt = null;
   private ResultSet rs = null;

   public Dbconn() {
   }

   public Connection getConnection() {
      try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         this.conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/students?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC", "root", "root");
      } catch (ClassNotFoundException var2) {
         System.out.println("数据库驱动加载失败！");
         var2.printStackTrace();
      } catch (SQLException var3) {
         System.out.println("数据库连接失败！");
         var3.printStackTrace();
      }

      return this.conn;
   }

   public void closeAll() {
      try {
         if (this.rs != null) {
            this.rs.close();
         }

         if (this.stmt != null) {
            this.stmt.close();
         }

         if (this.conn != null) {
            this.conn.close();
         }
      } catch (SQLException var2) {
         System.out.println("关闭数据库连接失败！");
         var2.printStackTrace();
      }

   }

   public ResultSet executeQuery(String sql) {
      try {
         this.conn = this.getConnection();
         this.stmt = this.conn.createStatement();
         this.rs = this.stmt.executeQuery(sql);
      } catch (SQLException var3) {
         System.out.println("执行查询失败！");
         var3.printStackTrace();
      }

      return this.rs;
   }

   public int executeUpdate(String sql) {
      int result = 0;

      try {
         this.conn = this.getConnection();
         this.stmt = this.conn.createStatement();
         result = this.stmt.executeUpdate(sql);
      } catch (SQLException var4) {
         System.out.println("执行更新失败！");
         var4.printStackTrace();
      }

      return result;
   }

   public static void main(String[] args) {
      Dbconn dbConn = new Dbconn();

      try {
         Connection conn = dbConn.getConnection();
         System.out.println("数据库连接成功！");
         DatabaseMetaData meta = conn.getMetaData();
         ResultSet rs = conn.getMetaData().getCatalogs();
         boolean dbExists = false;

         while(rs.next()) {
            if ("students".equalsIgnoreCase(rs.getString(1))) {
               dbExists = true;
               break;
            }
         }

         rs.close();
         if (!dbExists) {
            System.out.println("students数据库不存在");
         } else {
            System.out.println("students数据库存在");
            ResultSet tables = meta.getTables((String)null, (String)null, "student", new String[]{"TABLE"});
            if (tables.next()) {
               System.out.println("student表存在");
               Statement stmt = conn.createStatement();
               ResultSet descRs = stmt.executeQuery("DESCRIBE student");
               System.out.println("\nstudent表结构：");

               while(descRs.next()) {
                  PrintStream var10000 = System.out;
                  String var10001 = descRs.getString("Field");
                  var10000.println(var10001 + "\t" + descRs.getString("Type") + "\t" + descRs.getString("Null") + "\t" + descRs.getString("Key") + "\t" + descRs.getString("Default"));
               }

               descRs.close();
               stmt.close();
            } else {
               System.out.println("student表不存在");
            }

            tables.close();
         }

         dbConn.closeAll();
      } catch (Exception var9) {
         System.out.println("数据库连接测试失败：" + var9.getMessage());
         var9.printStackTrace();
      }

   }
}
