
// Source code is decompiled from a .class file using FernFlower decompiler.
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;

public class ImportStudentServlet extends HttpServlet {
   public ImportStudentServlet() {
   }

   protected void doPost(HttpServletRequest var1, HttpServletResponse var2) throws ServletException, IOException {
      throw new Error("Unresolved compilation problem: \n\tThe method parseRequest(HttpServletRequest) from the type ServletFileUpload refers to the missing type HttpServletRequest\n");
   }

   private Connection getConnection() throws SQLException {
      String url = "jdbc:mysql://localhost:3306/studentdb";
      String user = "root";
      String password = "password";
      return DriverManager.getConnection(url, user, password);
   }

   private String getCellValue(Cell cell) {
      if (cell == null) {
         return null;
      } else {
         switch (cell.getCellType()) {
            case NUMERIC:
               if (DateUtil.isCellDateFormatted(cell)) {
                  return cell.getDateCellValue().toString();
               }

               return String.valueOf((int)cell.getNumericCellValue());
            case STRING:
               return cell.getStringCellValue().trim();
            case FORMULA:
               return cell.getCellFormula();
            case BLANK:
            default:
               return null;
            case BOOLEAN:
               return String.valueOf(cell.getBooleanCellValue());
         }
      }
   }
}
